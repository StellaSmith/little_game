name: Build Linux

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-linux:
    name: Building for x86_64-pc-linux-gnu (${{ matrix.build_type }}) with ${{ matrix.compiler.c }}
    runs-on: ubuntu-20.04
    container:
      image: docker.io/stellasmith/vgame_builder:1
      volumes:
        - /home/runner/.conan/data:/root/.conan/data
        - /home/runner/.cache/ccache:/root/.cache/ccache
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - c: gcc
            cxx: g++
          - c: clang
            cxx: clang++
        build_type:
          - Release
          - Debug

    steps:
    - uses: actions/checkout@v2

    - name: cache conan packages
      uses: actions/cache@v2
      with:
        path: ~/.conan/data
        key: x86_64-linux-gnu:${{ matrix.compiler.c }}:${{ matrix.build_type }}:conan

    - name: cache ccache
      uses: actions/cache@v2
      with:
        path: ~/.cache/ccache
        key: x86_64-linux-gnu:${{ matrix.compiler.c }}:${{ matrix.build_type }}:ccache

    - name: Build Tools
      shell: /usr/bin/bash --login -eo pipefail {0}
      run: conan create recipes/vgame_tools vgame_tools/$(git log -1 --format='%H')@ -u -b missing -s compiler.cppstd=20

    - name: Install
      shell: /usr/bin/bash --login -eo pipefail {0}
      run: conan install recipes/vgame vgame/$(git log -1 --format='%H')@ -u -b missing -s compiler.cppstd=20 -if build -of build -s build_type=${{ build_type }}

    - name: Build
      shell: /usr/bin/bash --login -eo pipefail {0}
      run: conan build recipes/vgame -bf build